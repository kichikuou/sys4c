delegate int dg(int a);

struct obj {
	int method1(int a);
	int method2(int a);
	int m;
};

int obj::method1(int a)
{
	this.m += 100;
}

int obj::method2(int a)
{
	this.m += a;
}

void test_dg_set()
{
	obj o;
	dg d;
	d = &o.method1;
	d = &o.method2;
	d(42);
	assert(o.m == 42);
}

void test_dg_add()
{
	obj o;
	dg d;
	d += &o.method1;
	d += &o.method2;
	d(42);
	assert(o.m == 142);
}

void test_dg_plusa()
{
	obj o;
	dg d1;
	dg d2;
	d1 = &o.method1;
	d2 = &o.method2;
	d1 += d2;
	d1(42);
	assert(o.m == 142);
}

void test_dg_minusa()
{
	obj o;
	dg d1;
	dg d2;
	d1 += &o.method1;
	d1 += &o.method2;
	d2 += &o.method1;
	d1 -= d2;
	d1(42);
	assert(o.m == 42);
}

void test_dg_numof()
{
	obj o;
	dg d;
	int i = 0;
	d += &o.method1;
	i += d.Numof();
	d += &o.method2;
	i += d.Numof();
	assert(i == 3);
}

void test_dg_exist()
{
	obj o;
	dg d;
	assert(!d.Exist(&o.method1));
	d += &o.method1;
	assert(d.Exist(&o.method1));
}

void test_dg_clear()
{
	obj o;
	dg d;
	d += &o.method1;
	d += &o.method2;
	assert(d.Numof() == 2);
	d.Clear();
	assert(d.Numof() == 0);
}

int main()
{
	// test_dg_set();  // FIXME: xsystem4 doesn't pass this
	test_dg_add();
	test_dg_plusa();
	test_dg_minusa();
	test_dg_numof();
	test_dg_exist();
	// test_dg_erase();
	test_dg_clear();

	return 0;
}

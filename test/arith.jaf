int main()
{
	// integer ops
	int i;
	i = 2; assert(i + 3 == 5);
	i = 2; assert(i - 3 == -1);
	i = 2; assert(i * 3 == 6);
	i = 12; assert(i / 3 == 4);
	i = 12; assert(i % 10 == 2);
	i = 1; assert((i, 0) == 0);
	i = 1; assert(i << 3 == 8);
	i = 8; assert(i >> 3 == 1);
	i = 3; assert(i & 2 == 2);
	i = 1; assert(i | 2 == 3);
	i = 2; assert(i ^ 3 == 1);
	i = 2; assert(i < 3);
	i = 3; assert(i > 2);
	i = 3; assert(i <= 3);
	i = 2; assert(i >= 2);
	i = 2; assert(i == 2);
	i = 2; assert(i != 3);
	i = 2; assert(i && 3);
	i = 1; assert(i || 0);
	i = 2; assert((i += 3) == 5);
	i = 2; assert((i -= 3) == -1);
	i = 2; assert((i *= 3) == 6);
	i = 12; assert((i /= 3) == 4);
	i = 12; assert((i %= 10) == 2);
	i = 1; assert((i <<= 3) == 8);
	i = 8; assert((i >>= 3) == 1);
	i = 3; assert((i &= 2) == 2);
	i = 1; assert((i |= 2) == 3);
	i = 2; assert((i ^= 3) == 1);
	i = 2; assert(++i == 3);
	i = 2; assert(i++ == 2); assert(i == 3);

	// boolean ops
	bool b, b2;
	b = 0; assert(b == 0);
	b2 = b; assert(b == b2);

	// floating point ops
	float f;
	f = 2.0; assert(f + 3.3 == 5.3);
	f = 2.0; assert(f - 3.3 == -1.3);
	f = 2.0; assert(f * 3.3 == 6.6);
	f = 12.4; assert(f / 3.1 == 4.0);
	f = 2.0; assert(f < 2.2);
	f = 3.0; assert(f > 2.2);
	f = 3.3; assert(f <= 3.3);
	f = 2.2; assert(f >= 2.2);
	f = 2.0; assert(f == 2.0);
	f = 2.0; assert(f != 3.0);
	f = 2.0; assert((f += 3.3) == 5.3);
	f = 2.0; assert((f -= 3.5) == -1.5);
	f = 2.0; assert((f *= 3.3) == 6.6);
	f = 12.4; assert((f /= 3.1) == 4.0);

	// long int ops
	lint l;
	l = 2; assert(l + 3 == 5);
	l = 2; assert(l - 3 == -1);
	l = 2; assert(l * 3 == 6);
	l = 12; assert(l / 3 == 4);
	l = 12; assert(l % 10 == 2);
	l = 2; assert((l += 3) == 5);
	l = 2; assert((l -= 3) == -1);
	l = 2; assert((l *= 3) == 6);
	l = 12; assert((l /= 3) == 4);
	l = 12; assert((l %= 10) == 2);
	l = 1; assert((l <<= 3) == 8);
	l = 8; assert((l >>= 3) == 1);
	l = 3; assert((l &= 2) == 2);
	l = 1; assert((l |= 2) == 3);
	l = 2; assert((l ^= 3) == 1);

	// mixed ops
	i = 2; f = 3.3; assert(i + f == 5.3);
	f = 2.5; i = 3; assert(f - i == -0.5);
	i = 2; f = 3.3; assert((f += i) == 5.3);
	f = 2.0; i = f; assert(i == 2);
	i = 2; f = 2.0; assert(f == i);
	i = 2; l = 3; assert(i + l == 5);
	b = 0; i = 2; assert(b + i == 2);
	i = 2; b = i; assert(1 == b);

	return 0;
}
